"use strict";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}function p(x){console.log(x)}var GameBoard=function(){function GameBoard(width,height,connectWin){_classCallCheck(this,GameBoard);this.width=width;this.height=height;this.board=Array.from(Array(height),function(x){return Array.from(Array(width),function(x){return 0})});this.connectWin=connectWin;this.winStatus=null;this.lastMove=[]}_createClass(GameBoard,[{key:"isPossibleMove",value:function isPossibleMove(column){if(this.winStatus){return false}var i=0;while(i<this.height&&this.board[i][column]!=0){i++}return i<0||i==this.height?false:true}},{key:"addDisc",value:function addDisc(disc,column){column-=1;if(this.isPossibleMove(column)){var i=0;while(this.board[i][column]!=0){i++}this.board[i][column]=disc;this.lastMove=[i,column];return true}else {return false}}},{key:"boardState",value:function boardState(){console.log();var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=this.board[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var line=_step.value;var lineString="";var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=line[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var element=_step2.value;lineString+=" "+element+" "}}catch(err){_didIteratorError2=true;_iteratorError2=err}finally {try{if(!_iteratorNormalCompletion2&&_iterator2.return){_iterator2.return()}}finally {if(_didIteratorError2){throw _iteratorError2}}}console.log(lineString)}}catch(err){_didIteratorError=true;_iteratorError=err}finally {try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return()}}finally {if(_didIteratorError){throw _iteratorError}}}console.log(""+new Array(3*this.width).fill("-").join(""));var numberString="";for(var i=1;i<=this.width;i++){numberString+=" "+i+" "}console.log(numberString);console.log();console.log()}},{key:"checkHorizontal",value:function checkHorizontal(){for(var i=0;i<this.height;i++){var previousItem=null;var sequenceStart=null;var sequenceLength=0;for(var j=0;j<this.width;j++){if(this.board[i][j]!=0){if(this.board[i][j]==previousItem){sequenceLength+=1}else {previousItem=this.board[i][j];sequenceLength=1;sequenceStart=j}}else {previousItem=this.board[i][j];sequenceLength=1;sequenceStart=j}if(sequenceLength==this.connectWin){console.log(["H",i,sequenceStart]);this.winStatus={type:"H",x:i,y:sequenceStart};return true}}}return false}},{key:"checkVertical",value:function checkVertical(){for(var i=0;i<this.width;i++){var previousItem=null;var sequenceStart=null;var sequenceLength=0;for(var j=0;j<this.height;j++){if(this.board[j][i]!=0){if(this.board[j][i]==previousItem){sequenceLength+=1}else {previousItem=this.board[j][i];sequenceLength=1;sequenceStart=j}}else {previousItem=this.board[j][i];sequenceLength=1;sequenceStart=j}if(sequenceLength==this.connectWin){this.winStatus={type:"V",x:i,y:sequenceStart};return true}}}return false}},{key:"checkLeftRightDiagonal",value:function checkLeftRightDiagonal(){for(var k=this.connectWin-1;k<this.height;k++){for(var i=0;i<this.width-this.connectWin+1;i++){var m=k;var previousItem=null;var sequenceStart=null;var sequenceLength=0;for(var j=i;j<this.width&&m>=0;j++,m--){if(this.board[m][j]!=0){if(this.board[m][j]==previousItem){sequenceLength+=1}else {previousItem=this.board[m][j];sequenceLength=1;sequenceStart=j}}else {previousItem=this.board[m][j];sequenceLength=1;sequenceStart=j}if(sequenceLength>=this.connectWin){this.winStatus={type:"LR",x:k,y:sequenceStart};return true}}}}return false}},{key:"checkRightLeftDiagonal",value:function checkRightLeftDiagonal(){for(var k=this.connectWin-1;k<this.height;k++){for(var i=0;i<this.width-this.connectWin+1;i++){var m=k;var previousItem=null;var sequenceStart=null;var sequenceLength=0;for(var j=this.width-i-1;j>=0&&m>=0;j--,m--){if(this.board[m][j]!=0){if(this.board[m][j]==previousItem){sequenceLength+=1}else {previousItem=this.board[m][j];sequenceLength=1;sequenceStart=j}}else {previousItem=this.board[m][j];sequenceLength=1;sequenceStart=j}if(sequenceLength>=this.connectWin){this.winStatus={type:"RL",x:k,y:sequenceStart};return true}}}}return false}},{key:"checkWin",value:function checkWin(){if(this.checkHorizontal()||this.checkVertical()||this.checkLeftRightDiagonal()||this.checkRightLeftDiagonal()){return true}else {return false}}}]);return GameBoard}();
"use strict";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}var Play=function(){function Play(players){_classCallCheck(this,Play);this.game=new GameBoard(8,6,4);this.players=Array.from(Array(players),function(x,i){return i+1});this.winningSequence={};this.currentPlayer=1}_createClass(Play,[{key:"isPossibleMove",value:function isPossibleMove(column){return this.game.isPossibleMove(column)}},{key:"playerMove",value:function playerMove(column){var userInput=parseInt(column);this.game.addDisc(this.currentPlayer,userInput);if(this.game.checkWin()){console.log("Player "+this.currentPlayer+" wins!");this.winningSequence=this.game.winStatus;console.log(this.winningSequence);addDiscToBoard(this.game.lastMove,this.currentPlayer,this.game.height)}else {addDiscToBoard(this.game.lastMove,this.currentPlayer,this.game.height);this.currentPlayer==this.players.length?this.currentPlayer=1:this.currentPlayer++}}}]);return Play}();
'use strict'; //TODO: Structure JS correctly
//TODO: Make complete design responsive
//TODO: Improve Design
//TODO: Compatible for iOS8
//TODO: Add ability to play opponents online
//TODO: Rotate on z-axis when board is emptied
var addDiscToBoard=void 0;var setup=function(){var theGame=new Play(2);var connectFourArea=document.getElementsByClassName('gameContainer')[0];var columns=document.querySelectorAll('.column');var discSVG=document.getElementById('discArea');var discArea=document.getElementById('discAreaGroup');var winHighlightArea=document.getElementById('winHighlight');var redScore=document.getElementById('redScore');var yellowScore=document.getElementById('yellowScore');var restartButton=document.getElementsByClassName('restartGame')[0];var modal=document.getElementsByClassName('modalOverlay')[0];var svgNS='http://www.w3.org/2000/svg';function animateDiscDown(disc,y){var finalLocation=18+(5-y)*94+7;var transitionSpeed='transform '+0.3/5*(5-y)+'s ease-in';disc.style.transition=transitionSpeed;setTimeout(function(){disc.style.transform='translateY('+(finalLocation+80)+'px)'},20)}addDiscToBoard=function addDiscToBoard(location,player,maxHeight){var disc=document.createElementNS(svgNS,'image');disc.setAttributeNS('http://www.w3.org/1999/xlink','href',player==1?'img/red_disc.svg':'img/yellow_disc.svg');disc.setAttribute('x',''+(18+location[1]*94+7));disc.setAttribute('y','-80');disc.setAttribute('width','80');disc.setAttribute('height','80');discArea.appendChild(disc);animateDiscDown(disc,location[0]);if(theGame.winningSequence.type){setTimeout(function(){connectFourArea.classList.add('deselectAll');document.body.classList.add(player==1?'redWin':'yellowWin');restartButton.classList.add('newGame');restartButton.innerHTML='New Game';highlightWin(theGame.winningSequence.type,theGame.winningSequence.x,theGame.winningSequence.y);if(player==1){redScore.innerHTML=''+(parseInt(redScore.innerHTML)+1)}else {yellowScore.innerHTML=''+(parseInt(yellowScore.innerHTML)+1)}},100+300/5*(5-location[0]))}else {if(location[0]==maxHeight-1){columns[location[1]].classList.add('deselect')}document.body.classList.toggle('switch')}};window.addEventListener('resize',function(){if(screen.width<390){modal.classList.add('show')}else {modal.classList.remove('show')}},false);restartButton.addEventListener('click',function(){restartButton.disabled=true; //remove highlights
while(winHighlightArea.firstChild){winHighlightArea.removeChild(winHighlightArea.firstChild)} //animate discs down and out
discArea.classList.add('moveOut');setTimeout(function(){restartButton.disabled=false; //Update button
restartButton.classList.remove('newGame');restartButton.innerHTML='Restart'; //remove discs
while(discArea.firstChild){discArea.removeChild(discArea.firstChild)}discArea.classList.remove('moveOut'); //remove deslectAll
connectFourArea.classList.remove('deselectAll'); //remove all deselects
Array.prototype.forEach.call(discArea.childNodes,function(disc){disc.classList.remove('deselect')}); //remove win classes and return to normal
document.body.classList.remove('redWin');document.body.classList.remove('yellowWin');document.body.classList.add('switch'); //new game
theGame=new Play(2)},1500)},false);Array.prototype.forEach.call(columns,function(column){column.addEventListener('click',function(){for(var i=0;i<columns.length;i++){if(columns[i]===column){if(theGame.isPossibleMove(i)){theGame.playerMove(i+1);break}else {console.log('Move not possible')}}}},false)});function highlightWin(type,x,y){type=='H'?horizontalHighlight(x,y):type=='V'?verticalHighlight(x,y):diagonalHighlight(x,y,type=='RL'?135:45)}function createSVGHighlight(x,y,width,height,player){var highlight=document.createElementNS(svgNS,'rect');var styles='';highlight.setAttributeNS(null,'x',''+x);highlight.setAttributeNS(null,'y',''+y);highlight.setAttributeNS(null,'rx','47');highlight.setAttributeNS(null,'ry','47');highlight.setAttributeNS(null,'width',''+width);highlight.setAttributeNS(null,'height',''+height);styles+='fill: '+(player==1?'rgba(255, 115, 135, 0.4)':'rgba(255, 240, 80, 0.4)')+';';styles+='stroke: none;';highlight.setAttributeNS(null,'style',styles);return highlight}function verticalHighlight(x,y){var height=376; // 4 * 94
var width=94;var boardHeight=564;var left=18+x*width;var top=18+boardHeight-height-y*94;var highlight=createSVGHighlight(left,top,94,376,theGame.currentPlayer);winHighlightArea.appendChild(highlight)}function horizontalHighlight(x,y){var height=94;var width=376; // 4 * 94
var left=18+y*height;var top=18+(6-x-1)*height;var highlight=createSVGHighlight(left,top,376,94,theGame.currentPlayer);winHighlightArea.appendChild(highlight)}function diagonalHighlight(x,y,angle){var width=494;var height=94;var transform=document.createElementNS(svgNS,'g');var left=18+y*height;var top=18+(6-x-1)*height;var highlight=createSVGHighlight(left,top,496,94,theGame.currentPlayer);transform.setAttributeNS(null,'transform','rotate('+angle+' '+(left+47)+' '+(top+47)+')');transform.appendChild(highlight);winHighlightArea.appendChild(transform)}}();document.addEventListener('DOMContentLoaded',setup,false);
